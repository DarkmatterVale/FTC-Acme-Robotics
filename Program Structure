Below, feel free to edit how you think the design of the program should go.
I have begun to design which classes will have to be created, but since the competition isn't soon none of this is set in stone.


Autonomous:
  -Main
    -Move Robot Left ( Method/Function )
    -Move Robot Right ( Method/Function )
    -Move Robot Forward ( Method/Function )
    -Move Robot Backward ( Method/Function )
    -Initialize Robot ( Method/Function )
    -Move Robot ( Method/Function )
    -Main ( Method/Function )
    -Implement/Move Manipulators ( Method/Function )
  -Ultrasonic/Distance sensor
    -Get SensorValue ( Method/Function )
    -No-arg Constructor ( Method/Function )
  -Color sensor
    -Get SensorValue ( Method/Function )
    -No-arg Constructor ( Method/Function )
  -( Possible ) Touch Sensor
    -Get SensorValue ( Method/Function )
    -No-arg Constructor ( Method/Function )
  -IR sensor
    -Get SensorValue ( Method/Function )
    -No-arg Constructor ( Method/Function )
  -3 Axis Accelerometer
    -Get SensorValue ( Method/Function )
    -No-arg Constructor
  -Encoders
    -Get SensorValue ( Method/Function )
    -Set SensorValue ( Method/Function )
    -No-arg Constructor ( Method/Function )
    -Arg Constructor ( Method/Function )

  Classes/Libraries needed to be created for Autonomous mode:
    -Ultrasonic/Distance sensor
    -Color sensor
    -( Possible, not set in stone ) Touch sensor
    -IR sensor
    -3 Axis Accelerometer
    -Manipulator 1
    -Manipulator 2
    -Encoder
  
    We would design these classes. By doing this, we can compartmentalize the program, making it easier to debug and potentially expand.
    This is not set in stone, but it would be best to have the program as compartmentalized as possible.


Teleop:
  -Main
